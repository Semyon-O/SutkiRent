# Generated by Django 5.1.5 on 2025-03-30 11:29

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Баннер')),
            ],
            options={
                'verbose_name': 'Баннер',
                'verbose_name_plural': 'Баннеры',
                'db_table': 'banners',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Категория')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
                'db_table': 'categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Инвентарь')),
            ],
            options={
                'verbose_name': 'Инвентарь',
                'verbose_name_plural': 'Инвентарь',
                'db_table': 'inventories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Metro',
            fields=[
                ('name', models.CharField(max_length=255, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Регион')),
            ],
            options={
                'verbose_name': 'Регион',
                'verbose_name_plural': 'Регионы',
                'db_table': 'regions',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Услуги')),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
                'db_table': 'services',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='TypeObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True, verbose_name='Тип объекта')),
            ],
            options={
                'verbose_name': 'Тип объекта',
                'verbose_name_plural': 'Типы объектов',
                'db_table': 'types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Object',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url_path', models.CharField(max_length=255, unique=True, verbose_name='Маршрут')),
                ('is_showing', models.BooleanField(db_index=True, default=True, verbose_name='Опубликовать?')),
                ('short_name', models.CharField(max_length=255, verbose_name='Короткое имя')),
                ('cost', models.IntegerField(db_index=True, verbose_name='Стоимость')),
                ('amount_rooms', models.IntegerField(blank=True, db_index=True, null=True, verbose_name='Количество комнат')),
                ('floor', models.IntegerField(db_index=True, default=1, null=True, verbose_name='Этаж')),
                ('city', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Город')),
                ('space', models.FloatField(blank=True, db_index=True, null=True, verbose_name='Площадь')),
                ('address', models.CharField(blank=True, max_length=255, null=True, verbose_name='Адрес')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('conditions_accommodation', models.TextField(blank=True, null=True, verbose_name='Условия заселения')),
                ('contacts', models.TextField(blank=True, null=True, verbose_name='Контактные данные')),
                ('finding_description', models.TextField(blank=True, null=True, verbose_name='Как найти')),
                ('helpful_info', models.TextField(blank=True, null=True, verbose_name='Полезная информация')),
                ('parking_info', models.TextField(blank=True, null=True, verbose_name='Информация по парковке')),
                ('banner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='objects.banner', verbose_name='Баннер')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='objects.category', verbose_name='Категория')),
                ('near_metro', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='objects.metro')),
            ],
            options={
                'verbose_name': 'Объект',
                'verbose_name_plural': 'Объекты',
                'db_table': 'objects',
            },
        ),
        migrations.CreateModel(
            name='ObjectInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(verbose_name='Количество')),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects.inventory', verbose_name='Наименование инвентаря')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects.object', verbose_name='Объект')),
            ],
            options={
                'verbose_name': 'Инвентарь для объекта',
                'verbose_name_plural': 'Инвентарь для объекта',
                'ordering': ['object', 'inventory'],
            },
        ),
        migrations.AddField(
            model_name='object',
            name='inventories',
            field=models.ManyToManyField(through='objects.ObjectInventory', to='objects.inventory'),
        ),
        migrations.AddField(
            model_name='object',
            name='region',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='objects.region', verbose_name='Регион'),
        ),
        migrations.CreateModel(
            name='ObjectServices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects.object', verbose_name='Объект')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='objects.service', verbose_name='Услуга')),
            ],
            options={
                'verbose_name': 'Услуга для объекта',
                'verbose_name_plural': 'Услуги для объекта',
                'ordering': ['service', 'object'],
            },
        ),
        migrations.AddField(
            model_name='object',
            name='services',
            field=models.ManyToManyField(through='objects.ObjectServices', to='objects.service'),
        ),
        migrations.AddField(
            model_name='object',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='objects.typeobject', verbose_name='Тип'),
        ),
    ]
